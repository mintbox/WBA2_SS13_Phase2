/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Liveticker.LivetickerService;
import org.jivesoftware.smack.XMPPException;
import xmpp.PubSubClient;

import javax.swing.*;
import javax.xml.bind.JAXBException;
import java.io.IOException;

/**
 * @author denjae
 */
public class AdminWindow extends javax.swing.JFrame {

    private PubSubClient pubSub;

    /**
     * Creates new form AdminWindow
     */
    public AdminWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldMinComment = new javax.swing.JTextField();
        jTextFieldComment = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldMinTor = new javax.swing.JTextField();
        jTextFieldSchuetze = new javax.swing.JTextField();
        jTextFieldErgebnis = new javax.swing.JTextField();
        jToggleButtonTor = new javax.swing.JToggleButton();
        jToggleButtonComment = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 2, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Publishing");

        jLabel2.setText("Kommentar hinzufuegen");

        jTextFieldMinComment.setText("Spielminute");

        jTextFieldComment.setText("Kommentar");

        jLabel3.setText("Tor hinzufuegen");

        jTextFieldMinTor.setText("Spielminute");

        jTextFieldSchuetze.setText("Torschuetze");

        jTextFieldErgebnis.setText("Ergebnis");

        jToggleButtonTor.setText("Absenden");
        jToggleButtonTor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jToggleButtonTorActionPerformed(evt);
                } catch (XMPPException e) {
                    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
                } catch (IOException e) {
                    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
                } catch (JAXBException e) {
                    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
                }
            }
        });

        jToggleButtonComment.setText("Absenden");
        jToggleButtonComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jToggleButtonCommentActionPerformed(evt);
                } catch (JAXBException e) {
                    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
                } catch (IOException e) {
                    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
                }
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(layout.createSequentialGroup()
                                .add(22, 22, 22)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jLabel3)
                                        .add(jLabel2)
                                        .add(layout.createSequentialGroup()
                                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                        .add(jTextFieldMinComment, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                        .add(jTextFieldMinTor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                                        .add(layout.createSequentialGroup()
                                                                .add(14, 14, 14)
                                                                .add(jTextFieldSchuetze))
                                                        .add(layout.createSequentialGroup()
                                                                .add(18, 18, 18)
                                                                .add(jTextFieldComment, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                                .add(18, 18, 18)
                                                .add(jTextFieldErgebnis, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(18, 18, 18)
                                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                        .add(jToggleButtonTor)
                                                        .add(jToggleButtonComment))))
                                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                                .addContainerGap()
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(jTextFieldMinComment, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jTextFieldComment, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jToggleButtonComment))
                                .add(18, 18, 18)
                                .add(jLabel3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(jTextFieldMinTor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jTextFieldSchuetze, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jTextFieldErgebnis, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jToggleButtonTor))
                                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jToggleButtonCommentActionPerformed(java.awt.event.ActionEvent evt) throws JAXBException, IOException {
        int min = Integer.parseInt(jTextFieldMinComment.getText());
        String comment = jTextFieldComment.getText();
        try {
            pubSub.pubComment(team, min, comment);
            liveticker.postComment(mannid, min, comment);
            JOptionPane.showMessageDialog(null, "Kommentar gesendet");
        } catch (XMPPException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
        }
    }

    private void jToggleButtonTorActionPerformed(java.awt.event.ActionEvent evt) throws XMPPException, JAXBException, IOException {
        Integer min = Integer.parseInt(jTextFieldMinTor.getText());
        String schuetze = jTextFieldSchuetze.getText();
        String ergebnis = jTextFieldErgebnis.getText();
        pubSub.pubGoal(team, schuetze, min, ergebnis);
        liveticker.postErgebnis(mannid, ergebnis, schuetze, team, min);
        JOptionPane.showMessageDialog(null, "Tor gesendet");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldComment;
    private javax.swing.JTextField jTextFieldErgebnis;
    private javax.swing.JTextField jTextFieldMinComment;
    private javax.swing.JTextField jTextFieldMinTor;
    private javax.swing.JTextField jTextFieldSchuetze;
    private javax.swing.JToggleButton jToggleButtonComment;
    private javax.swing.JToggleButton jToggleButtonTor;
    private String team;
    private LivetickerService liveticker;
    private int mannid;

    public void setPubSub(PubSubClient pubSub) {
        this.pubSub = pubSub;
    }


    public void setTeam(String team) {
        this.team = team;
    }

    public void setMannid(int mannid) {
        this.mannid = mannid;
    }

    public void setLiveticker(LivetickerService liveticker) {
        this.liveticker = liveticker;
    }
}
